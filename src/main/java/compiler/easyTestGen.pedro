import mini;

def void twoArgs(int a, int b) {
    writeln(a);
    writeln(b);
}

helloMini();

write("mini const: ");
writeln(miniConst);


def void print5() {
    writeln(5);
}
print5();



twoArgs(1, 2);


struct Point {
    int x;
    int y;
}

int aa = 678;

def void threeArgs(int a, int b, int c) {
    write("aa: ");
    writeln(aa);
    writeln(a);
    writeln(b);
    writeln(c);
}

int aaa = 35;

if (true) {
    twoArgs(3, 4);
}

threeArgs(1, 2, 3);

write("aaa: ");
writeln(aaa);

def void fourArgs(int a, int b, int c, int d) {
    twoArgs(a, b);
    twoArgs(c, d);
}

fourArgs(1, 2, 3, 4);

def Point createPoint(int x, int y) {
    //Point p = Point(1, 2);
    Point p = Point(x, y);
    write(p.x);
    write(", ");
    writeln(p.y);
    return p;
}

int[] a = int[2];
a[0] = 1;
a[1] = 2;

def int square(int v) {
    return v*v;
}

def int gigaSquare(int[] v) {
    int i;
    int total = 0;
    for (i=0, i<2, i = i+1) {
        total = total + square(v[i]);
    }
    return total;
}

write("gigaSquare: ");
writeln(gigaSquare(a));
Point p12 = Point(42, 69);

createPoint(11, 23);

write("Point p12: ");
write(p12.x);
write(", ");
writeln(p12.y);

def Point copyPoints(Point[] p) {
    return Point(p[0].x+p[1].x, p[0].y+p[1].y);
}

Point[] points = Point[2];
points[0] = Point(1, 2);
points[1] = Point(3, 4);

Point[] p = points;
Point p2 = Point(p[0].x+p[1].x, p[0].y+p[1].y);

def void printPoint(Point p) {
    write(p.x);
    write(", ");
    writeln(p.y);
}

Point cpy = copyPoints(points);
write("Point cpy: ");
printPoint(cpy);

Point p1 = Point(1, 2);
printPoint(p1);

def void main() {
    int value = readInt();
    writeln(square(value));
    int i;
    for (i=1, i<100, i = i+1) {
        while (value!=3) {
            if (i > 10){
                // ....
            } else {
                // ....
            }
            value = value + 1;
        }
    }

    i = (i+2)*2;
}

struct Person {
    string name;
    Point location;
    int[] history;
}

struct SuperPerson {
    string name;
    Point location;
    int[] history;
    Person[] friends;
}

SuperPerson superPerson = SuperPerson("me", Point(42, 69), int[2], Person[2]);
superPerson.friends[0] = Person("John", Point(1, 2), int[2]);
superPerson.friends[1] = Person("Doe", Point(3, 4), int[2]);

write("SuperPerson: ");
writeln(superPerson.name);
write(superPerson.location.x);
write(", ");
writeln(superPerson.location.y);
write("SuperPerson friends: ");
writeln(superPerson.friends[0].name);
write(superPerson.friends[0].location.x);
write(", ");
write(superPerson.friends[0].location.y);
writeln("");
write("SuperPerson friends: ");
writeln(superPerson.friends[1].name);
write(superPerson.friends[1].location.x);
write(", ");
write(superPerson.friends[1].location.y);
