struct Point {
    int x;
    int y;
}

string[] names = string[5];
names[0] = "John";
names[1] = "Doe";
names[2] = "Jane";
names[3] = "Doe";
names[4] = "John";

def int square(int v) {
    return v*v;
}

def Point copyPoints(Point[] p) {
    return Point(p[0].x+p[1].x, p[0].y+p[1].y);
}

write(names[0]);
write(names[1]);

Point[] points = Point[5];

points[0] = Point(1, 2);
points[1] = Point(3, 4);
points[2] = Point(5, 6);
points[3] = Point(7, 8);
points[4] = Point(9, 10);

writeInt(points[0].x);
writeInt(points[0].y);

// List of point

struct Person {
    string name;
    Point location;
    int[] history;
}

struct SuperPerson {
    string name;
    Point location;
    int[] history;
    Person[] friends;
}

SuperPerson superPerson = SuperPerson("me", Point(42, 69), int[2], Person[2]);
superPerson.friends[0] = Person("John", Point(1, 2), int[2]);
superPerson.friends[1] = Person("Doe", Point(3, 4), int[2]);

writeString(superPerson.friends[0].name);
writeInt(superPerson.friends[0].location.x);
writeInt(superPerson.friends[0].location.y);

Point location = Point(192, 276);

int[] carray = int[5];

Person d = Person("me", Point(42, 69), int[2]);

def void main() {
    int value = readInt();
    writeln(square(value));
    int i;
    for (i=1, i<100, i = i+1) {
        while (value!=3) {
            if (i > 10){
                // ....
            } else {
                // ....
            }
        }
    }

    i = (i+2)*2;
    writeString("Je suis main hehe");
}

writeString(d.name);
d.history[0] = 1;
d.history[1] = 2;

write(d.history[0]);
write(d.history[1]);

d.location.x = 111;
write(d.location.x);
write(d.location.y);

write(100000);

location.x = 100;

writeInt(location.x);
writeInt(location.y);

Point p = d.location;
writeInt(p.x);
writeInt(p.y);

string car = chr(65);

writeString(car);

carray[0] = 1;

int i = 0;
//for (i = 0, i < len(carray), i = i + 1) {
//    carray[i] = i;
//}


writeInt(carray[0]);

int lengthArray = len(carray);

writeInt(lengthArray * carray[4]);

int length = len("hello");

writeInt(length);

bool c = 1 > 10;

if (c) {
    writeString("True because c is true");
} else {
    writeString("False");
}

string s = "Hello ";
string s2 = "World";
writeString(s + s2);

if (s == "Hello") {
    writeString("Equal");
} else {
    writeString("Not Equal");
}


if (2.0 <= 3.0 && 3.0 != 3.0 || 4.0 >= 5.0 && 6.0 == 6.0) {
    writeString("Hello");
}

int g = 2;

int a = 1;
while (a <= 10  && a < square(2)) {
    writeInt(a);
    int g = 35;
    a = a + 1;
}

writeInt(g);

writeString("Printing numbers from 1 to 10");
int b = 1;
for (b = 1, b <= 10, b = b + 1) {
    writeInt(b);
}

