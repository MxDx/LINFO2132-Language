struct Point {
    int x;
    int y;
}

struct Person {
    string name;
    Point location;
    int[] history;
}

Point location = Point(192, 276);

int[] carray = int[5];

Person d = Person("me", Point(42, 69), int[2]);

def void main() {
    writeString("Hello World");
}

writeString(d.name);

write(100000);

location.x = 100;

writeInt(location.x);
writeInt(location.y);

Point p = d.location;
writeInt(p.x);
writeInt(p.y);

string car = chr(65);

writeString(car);

carray[0] = 1;

int i = 0;
for (i = 0, i < len(carray), i = i + 1) {
    carray[i] = i;
}


writeInt(carray[0]);

int lengthArray = len(carray);

writeInt(lengthArray * carray[4]);

int length = len("hello");

writeInt(length);

bool c = 1 > 10;

if (c) {
    writeString("True because c is true");
} else {
    writeString("False");
}

string s = "Hello ";
string s2 = "World";
writeString(s + s2);

if (s == "Hello") {
    writeString("Equal");
} else {
    writeString("Not Equal");
}


if (2.0 <= 3.0 && 3.0 != 3.0 || 4.0 >= 5.0 && 6.0 == 6.0) {
    writeString("Hello");
}

def int square(int v) {
    return v*v;
}

int g = 2;

int a = 1;
while (a <= 10  && a < square(2)) {
    writeInt(a);
    int g = 35;
    a = a + 1;
}

writeInt(g);

writeString("Printing numbers from 1 to 10");
int b = 1;
for (b = 1, b <= 10, b = b + 1) {
    writeInt(b);
}


int[] b2 = int[5];
b2[0] = 1;

//write(b2[0]);


